#include<iostream>

using namespace std;

struct student {
	int age;
	string name;
};

void StudentInfo(student* s) {
	s->age;	// 화살표로 접근
}

int main() {
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	for (int i = 0; i < 10; i++) {
		cout << "arr[" << i << "]의 주소값 : " << &arr[i] << endl;
	}

	cout << "=============================\n";
	// 포인터로도 배열 원소에 접근 가능
	// 배열의 시작부분을 가리키는 포인터를 정의하고
	// 포인터에 1을 더하면 그 다음 원소를 가리키고
	// 2를 더하면 그 다음다음 원소를 가리킨다.
	int arr1[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int* parr;		// 포인터 변수

	parr = &arr[0];	// 배열의 첫번째 요소의 주소를 저장

	for (int i = 0; i < 10; i++) {
		cout << "arr1[" << i << "]의 주소값 : " << &arr1[i] << endl;
		cout << "(parr+" << i << ")의 주소값 : " << (parr + i) << endl;	// 위와 같음
	}

	int arr2[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int* parr1;			// 포인터 변수
	parr1 = &arr2[0];	// 첫번째 요소를 가리키게

	// 배열의 네번째 요소와 포인터 연산을 통해 네번째 요소에 접근한 값을 출력
	cout << "arr2[3] = " << arr2[3] << ", *(parr1+3) = " << *(parr + 3) << endl;

	// 배열의 이름은 첫번째 원소의 주소와 동일한데 그럼 배열의 이름은 첫번째 주소를 가리키는 포인터??
	// ㄴ 아니다!! 배열과 포인터는 다름
	// 배열의 이름을 사용하면 암묵적으로 첫번째 주소를 가리키는 포인터로 타입 변환이 됨!!!!!
	int arr3[6] = { 1,2,3,4,5,6 };
	int* parr2 = arr3;	// 배열의 이름 : 시작주소	
}